name: Construccion Proyecto Netflix

on:
  push:
    branches: feat-lab-oscarolivares-v1

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Install Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Use SonarQube Scanner
        uses: SonarSource/sonarqube-scan-action@v2.3.0
        with:
        # Configure SonarQube scanner (replace with your project details)
            projectKey: 'OscarGitOps_Laboratorio-final'
          organization: 'oscargitops'
        # ... other SonarQube settings

     
      - name: Run OWASP Dependency Check
        uses: dependency-check/dependency-check-action@v2
        with:
        # Configure Dependency Check options (replace with your settings)
           scan: '.'
           disableYarnAudit: true
           disableNodeAudit: true
        # ... other Dependency Check options
      
      - name: Run Trivy File System Scan
        run: |
          trivy fs . > trivyfs.txt
      
      - name: Docker Login
        uses: docker/login-action@v3.2.0
        with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASS }}
      - name: Build Docker Image
        run: |
           docker build --tag oscargitops/netflix:latest . -t netflix .
      
      - name: Push Docker Image (if pushing)
        if: ${{ secrets.DOCKER_USER }} 
        run: |
           docker tag netflix oscargitops/netflix:latest
           docker push oscargitops/netflix:latest
      
      - name: Run Trivy Image Scan
        run: |
          trivy image oscargitops/netflix:latest > trivyimage.txt
      
      - name: Deploy to Container (example)
        run: |
          docker run -d -p 8081:80 oscargitops/netflix:latest  # Replace with your deployment command
      
      - name: Run container locally
        run: |
           docker run -d -p 8081:80 oscargitops/netflix:latest  # Replace with your actual image name and port mapping
        
      
      - name: Send Email Notification
        uses: actions/email@v3
        with:
          subject: "${{ job.status }} - Build & Deploy (Netflix Clone)"
          body: |
            Project: ${{ github.workflow }}<br/>
            Build Number: ${{ github.run_number }}<br/>
            URL: ${{ github.action_url }}<br/>
            to: oscarolivares.cloud@gmail.com  # Replace with your email address
            attachments: 'trivyfs.txt,trivyimage.txt'